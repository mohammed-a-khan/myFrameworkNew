# CS TestForge Framework - Object Repository
# ============================================
# This file contains all UI element locators for page objects
# Format: key=type:value
# Types: id, xpath, css, name, class, tag, link, partialLink
#
# Property substitution is supported: ${property.name}
# Dynamic patterns use {0}, {1}, etc. for runtime parameter substitution

# ========================================
# AKHAN APPLICATION OBJECT REPOSITORY
# ========================================

# Login Page Locators
akhan.login.username.field=id:username
akhan.login.password.field=id:password
akhan.login.submit.button=xpath://button[@type="submit" and contains(text(),"Log On")]
akhan.login.error.message=css:.error-message
akhan.login.page.logo=css:.login-logo
akhan.login.forgot.password.link=link:Forgot Password?
akhan.login.remember.me.checkbox=id:rememberMe

# Home Page Locators
akhan.home.page.header=xpath://h1[@class="page-header"]
akhan.home.welcome.message=css:.welcome-message
akhan.home.user.profile.icon=css:.user-profile-icon
akhan.home.logout.button=xpath://button[contains(text(),"Logout")]

# Navigation Menu Locators
akhan.menu.home=xpath://a[contains(text(),"Home")]
akhan.menu.esss.series=xpath://a[contains(text(),"ESSS/Series")]
akhan.menu.reference.interests=xpath://a[contains(text(),"Reference Interests")]
akhan.menu.interest.history=xpath://a[contains(text(),"Interest History")]
akhan.menu.external.interests=xpath://a[contains(text(),"External Interests")]
akhan.menu.system.admin=xpath://a[contains(text(),"System Admin")]
akhan.menu.version.info=xpath://a[contains(text(),"Version Information")]
akhan.menu.file.upload=xpath://a[contains(text(),"File Upload")]
akhan.navigation.container=css:nav.main-navigation
akhan.menu.all.items=css:nav.main-navigation a.menu-item

# Home Page Additional Elements
akhan.home.notification.icon=css:.notification-icon
akhan.home.notification.count=css:.notification-count
akhan.home.search.box=id:globalSearch
akhan.home.search.button=xpath://button[@aria-label="Search"]

# ESSS/Series Page Locators
akhan.esss.page.header=xpath://h1[contains(text(),"ESSS")]
akhan.esss.type.dropdown=id:typeDropdown
akhan.esss.attribute.dropdown=id:attributeDropdown
akhan.esss.search.input=id:searchInput
akhan.esss.search.button=xpath://button[contains(text(),"Search")]
akhan.esss.clear.button=xpath://button[contains(text(),"Clear")]
akhan.esss.results.table=id:resultsTable
akhan.esss.table.rows=xpath://table[@id="resultsTable"]//tbody//tr
akhan.esss.table.headers=xpath://table[@id="resultsTable"]//thead//th
akhan.esss.no.results.message=css:.no-results
akhan.esss.add.files.button=xpath://*[contains(text(),"Add files")]
akhan.esss.file.input=xpath://input[@type="file"]
akhan.esss.upload.button=xpath://button[contains(text(),"Upload")]
akhan.esss.loading.spinner=css:.loading-spinner
akhan.esss.advanced.search.checkbox=css:input.advanced-search
akhan.esss.export.button=xpath://button[contains(text(),"Export")]

# Dynamic Elements Container (for demonstration)
akhan.dynamic.container=css:.dynamic-content-container

# Common Elements
akhan.common.modal.dialog=css:.modal-dialog
akhan.common.modal.close=css:.modal-dialog .close-button
akhan.common.alert.message=css:.alert-message
akhan.common.success.message=css:.success-message
akhan.common.warning.message=css:.warning-message
akhan.common.info.message=css:.info-message

# ========================================
# DYNAMIC LOCATOR PATTERNS
# ========================================
# These patterns use {0}, {1}, {2} placeholders for runtime values
# Usage: findDynamicElement("pattern.key", param1, param2, ...)

# Menu and Navigation Patterns
dynamic.menu.item.xpath=//a[contains(text(),'{0}')]
dynamic.button.text.xpath=//button[contains(text(),'{0}')]
dynamic.button.by.text=//button[contains(text(),'{0}')]
dynamic.link.text.xpath=//a[contains(text(),'{0}')]

# Table Patterns
dynamic.table.cell.xpath=//table[@id='{0}']//tbody//tr[{1}]//td[{2}]
dynamic.table.row.xpath=//table[@id='{0}']//tbody//tr[{1}]
dynamic.table.header.xpath=//table[@id='{0}']//thead//th[{1}]

# Form Element Patterns
dynamic.input.by.label=//label[contains(text(),'{0}')]/following-sibling::input[1]
dynamic.input.by.placeholder=//input[@placeholder='{0}']
dynamic.checkbox.by.label=//label[contains(text(),'{0}')]/preceding-sibling::input[@type='checkbox']
dynamic.radio.by.label=//label[contains(text(),'{0}')]/preceding-sibling::input[@type='radio']

# Dropdown Patterns
dynamic.dropdown.option.xpath=//select[@id='{0}']/option[text()='{1}']
dynamic.dropdown.option=//select[@id='{0}']/option[text()='{1}']
dynamic.select.option.by.value=//select[@id='{0}']/option[@value='{1}']

# Generic Element Patterns
dynamic.element.by.id=//*[@id='{0}']
dynamic.element.by.class=//*[@class='{0}']
dynamic.element.by.name=//*[@name='{0}']
dynamic.element.contains.text=//*[contains(text(),'{0}')]
dynamic.element.by.attribute=//{0}[@{1}='{2}']

# Data Attribute Patterns
dynamic.data.attribute=[data-{0}='{1}']
dynamic.div.with.data.attr=//div[@data-{0}='{1}']
dynamic.element.by.testid=//*[@data-testid='{0}']

# Advanced Patterns
dynamic.element.nth.child=//*[@class='{0}']:nth-child({1})
dynamic.indexed.element=({0})[{1}]
dynamic.nested.element=#{0} {1}
dynamic.sibling.element=//*[text()='{0}']/following-sibling::{1}[1]
dynamic.parent.child=//*[@id='{0}']//{1}
dynamic.element.contains.class=//*[contains(@class,'{0}')]

# Button Patterns
dynamic.button.by.aria.label=//button[@aria-label='{0}']
dynamic.button.by.type=//button[@type='{0}']
dynamic.submit.button=//button[@type='submit' and contains(text(),'{0}')]

# Link Patterns
dynamic.link.containing=//a[contains(text(),'{0}')]
dynamic.link.by.href=//a[@href='{0}']
dynamic.link.contains.href=//a[contains(@href,'{0}')]

# List Item Patterns
dynamic.list.item.by.index=//ul[@id='{0}']/li[{1}]
dynamic.list.item.by.text=//ul[@id='{0}']/li[contains(text(),'{1}')]

# Product/Card Patterns (for e-commerce style pages)
dynamic.product.card=//div[@class='product-card'][.//h3[contains(text(),'{0}')]]
dynamic.card.by.title=//div[contains(@class,'card')][.//h3[text()='{0}']]

# Tab Patterns
dynamic.tab.by.name=//div[@class='tab'][text()='{0}']
dynamic.tab.by.index=//ul[@class='tabs']/li[{0}]

# Span and Div Patterns
dynamic.span.by.text=//span[text()='{0}']
dynamic.div.by.class=//div[@class='{0}']
dynamic.div.contains.text=//div[contains(text(),'{0}')]

# ========================================
# WAIT CONDITIONS
# ========================================
# Special locators for wait conditions
wait.page.loaded.xpath=//body[@data-loaded='true']
wait.ajax.complete.xpath=//*[@id='ajax-loader' and @style='display: none;']
wait.spinner.hidden.css=.loading-spinner:not(.active)

# ========================================
# PROPERTY SUBSTITUTION EXAMPLES
# ========================================
# These can use property placeholders from application.properties
akhan.url=${cs.akhan.url}
akhan.environment=${cs.akhan.environment}
akhan.default.user=${cs.akhan.user.default}
akhan.default.password=${cs.akhan.password.default}

# ========================================
# ENCRYPTED VALUES (Examples)
# ========================================
# Use CSEncryptionUtils to encrypt sensitive data
akhan.api.key=ENC(IZBF1jVLD39bR2GoOv1b4dwGdoCl4csPH2BNQAwjEkAE/lsYqA1CBic2+S1CuS56)
akhan.secure.token=ENC(lZv3Yl1SNjUAh1Cu5Nt2yg5dECpq0CCPJegAqfpNbVPBLdT3/q4cCzKtiNFAYM9o)